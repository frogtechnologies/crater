import{G as r,I as u,a as m,d as P}from"./vendor.8669b7df.js";import{b as f,h as i,u as l}from"./main.8525167c.js";var y={maxPayableAmount:Number.MAX_SAFE_INTEGER,selectedCustomer:"",currency:null,currency_id:"",customer_id:"",payment_number:"",payment_date:"",amount:0,invoice_id:"",notes:"",payment_method_id:"",customFields:[],fields:[]};const v=(h=!1)=>{const p=h?window.pinia.defineStore:P,{global:c}=window.i18n;return p({id:"payment",state:()=>({payments:[],paymentTotalCount:0,selectAllField:!1,selectedPayments:[],selectedNote:null,showExchangeRate:!1,drivers:[],providers:[],paymentProviders:{id:null,name:"",driver:"",active:!1,settings:{key:"",secret:""}},currentPayment:{...y},paymentModes:[],currentPaymentMode:{id:"",name:null},isFetchingInitialData:!1}),getters:{isEdit:t=>!!t.paymentProviders.id},actions:{fetchPaymentInitialData(t){const n=f(),s=r();this.isFetchingInitialData=!0;let e=[];t&&(e=[this.fetchPayment(s.params.id)]),Promise.all([this.fetchPaymentModes({limit:"all"}),this.getNextNumber(),...e]).then(async([a,d,o])=>{t?o.data.data.invoice&&(this.currentPayment.maxPayableAmount=parseInt(o.data.data.invoice.due_amount)):!t&&d.data&&(this.currentPayment.payment_date=u().format("YYYY-MM-DD"),this.currentPayment.payment_number=d.data.nextNumber,this.currentPayment.currency=n.selectedCompanyCurrency),this.isFetchingInitialData=!1}).catch(a=>{i(a)})},fetchPayments(t){return new Promise((n,s)=>{m.get("/api/v1/payments",{params:t}).then(e=>{this.payments=e.data.data,this.paymentTotalCount=e.data.meta.payment_total_count,n(e)}).catch(e=>{i(e),s(e)})})},fetchPayment(t){return new Promise((n,s)=>{m.get(`/api/v1/payments/${t}`).then(e=>{Object.assign(this.currentPayment,e.data.data),n(e)}).catch(e=>{i(e),s(e)})})},addPayment(t){return new Promise((n,s)=>{m.post("/api/v1/payments",t).then(e=>{this.payments.push(e.data),l().showNotification({type:"success",message:c.t("payments.created_message")}),n(e)}).catch(e=>{i(e),s(e)})})},updatePayment(t){return new Promise((n,s)=>{m.put(`/api/v1/payments/${t.id}`,t).then(e=>{if(e.data){let a=this.payments.findIndex(o=>o.id===e.data.data.id);this.payments[a]=t.payment,l().showNotification({type:"success",message:c.t("payments.updated_message")})}n(e)}).catch(e=>{i(e),s(e)})})},deletePayment(t){const n=l();return new Promise((s,e)=>{m.post("/api/v1/payments/delete",t).then(a=>{let d=this.payments.findIndex(o=>o.id===t);this.payments.splice(d,1),n.showNotification({type:"success",message:c.t("payments.deleted_message",1)}),s(a)}).catch(a=>{i(a),e(a)})})},deleteMultiplePayments(){const t=l();return new Promise((n,s)=>{m.post("/api/v1/payments/delete",{ids:this.selectedPayments}).then(e=>{this.selectedPayments.forEach(a=>{let d=this.payments.findIndex(o=>o.id===a.id);this.payments.splice(d,1)}),t.showNotification({type:"success",message:c.tc("payments.deleted_message",2)}),n(e)}).catch(e=>{i(e),s(e)})})},setSelectAllState(t){this.selectAllField=t},selectPayment(t){this.selectedPayments=t,this.selectedPayments.length===this.payments.length?this.selectAllField=!0:this.selectAllField=!1},selectAllPayments(){if(this.selectedPayments.length===this.payments.length)this.selectedPayments=[],this.selectAllField=!1;else{let t=this.payments.map(n=>n.id);this.selectedPayments=t,this.selectAllField=!0}},selectNote(t){this.selectedNote=null,this.selectedNote=t},resetSelectedNote(t){this.selectedNote=null},searchPayment(t){return new Promise((n,s)=>{m.get("/api/v1/payments",{params:t}).then(e=>{this.payments=e.data,n(e)}).catch(e=>{i(e),s(e)})})},previewPayment(t){return new Promise((n,s)=>{m.get(`/api/v1/payments/${t.id}/send/preview`,{params:t}).then(e=>{n(e)}).catch(e=>{i(e),s(e)})})},sendEmail(t){return new Promise((n,s)=>{m.post(`/api/v1/payments/${t.id}/send`,t).then(e=>{n(e)}).catch(e=>{i(e),s(e)})})},getNextNumber(t,n=!1){return new Promise((s,e)=>{m.get("/api/v1/next-number?key=payment",{params:t}).then(a=>{n&&(this.currentPayment.payment_number=a.data.nextNumber),s(a)}).catch(a=>{i(a),e(a)})})},resetCurrentPayment(){this.currentPayment={...y}},fetchPaymentModes(t){return new Promise((n,s)=>{m.get("/api/v1/payment-methods",{params:t}).then(e=>{this.paymentModes=e.data.data,n(e)}).catch(e=>{i(e),s(e)})})},fetchPaymentMode(t){return new Promise((n,s)=>{m.get(`/api/v1/payment-methods/${t}`).then(e=>{this.currentPaymentMode=e.data.data,n(e)}).catch(e=>{i(e),s(e)})})},addPaymentMode(t){const n=l();return new Promise((s,e)=>{m.post("/api/v1/payment-methods",t).then(a=>{this.paymentModes.push(a.data.data),n.showNotification({type:"success",message:c.t("settings.payment_modes.payment_mode_added")}),s(a)}).catch(a=>{i(a),e(a)})})},updatePaymentMode(t){const n=l();return new Promise((s,e)=>{m.put(`/api/v1/payment-methods/${t.id}`,t).then(a=>{if(a.data){let d=this.paymentModes.findIndex(o=>o.id===a.data.data.id);this.paymentModes[d]=t.paymentModes,n.showNotification({type:"success",message:c.t("settings.payment_modes.payment_mode_updated")})}s(a)}).catch(a=>{i(a),e(a)})})},deletePaymentMode(t){const n=l();return new Promise((s,e)=>{m.delete(`/api/v1/payment-methods/${t}`).then(a=>{let d=this.paymentModes.findIndex(o=>o.id===t);this.paymentModes.splice(d,1),a.data.success&&n.showNotification({type:"success",message:c.t("settings.payment_modes.deleted_message")}),s(a)}).catch(a=>{i(a),e(a)})})}}})()};export{v as u};
